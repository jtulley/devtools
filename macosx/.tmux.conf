# Usage:
# - Prefix is set to Ctrl-a (make sure you remapped Caps Lock to Ctrl)
# - All prefixed with Ctrl-a
#   - Last used window: /
#   - Last used pane:   ;
#   - Vertical split:   v
#   - Horizontal split: s
#   - Previous window:  [
#   - Next window:      ]
#   - Choose session:   Ctrl-s
#   - Quick window:     Ctrl-q

set-option -g default-command "zsh"

set -g mouse on

### LOOK & FEEL ###
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set-option -g status-position top

# default statusbar colors
set-option -g status-bg colour235
set-option -g status-fg colour179
set-option -g status-style default

# default window title colors
set-window-option -g window-status-style 'fg=#f4f4f4,bg=default'

# active window title colors
set-window-option -g window-status-style 'fg=colour166,bg=default'
set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style 'fg=colour235,bg=default'
set-option -g pane-active-border-style 'fg=colour240,bg=default'

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# clock
set-window-option -g clock-mode-colour colour64

#count windows and panes from 1
set -g base-index 1
setw -g pane-base-index 1

set-option -g status-keys vi
set-option -g mode-keys vi


#no command delay
set -sg escape-time 0


unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

unbind /
bind / last-window

unbind %
bind s split-window -v
unbind '"'
bind v split-window -h

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Copy Commands
# bind-key -n M-y copy-mode

# Setup 'v' to begin selection as in Vim
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind C-c run "tmux set-buffer - | reattach-to-user-namespace pbcopy"
bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Clear
bind-key -n M-c send-keys -t "$pane" "clear" Enter
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

unbind \{
unbind \}
bind \{ swap-pane -D
bind \} swap-pane -U

bind Escape copy-mode

unbind [
bind [ previous-window
bind p previous-window
unbind ]
bind ] next-window
bind n next-window

unbind o
bind o select-pane -t :.-

bind C-q command-prompt -I "htop" -p "Quick window command: " "new-window '%%'"


bind C-c run "tmux save-buffer - | pbcopy"
bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

bind C-s choose-session

